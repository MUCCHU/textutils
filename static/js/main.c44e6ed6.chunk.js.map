{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Navbar","to","title","aboutText","onClick","toggleMode","htmlFor","defaultProps","TextForm","useState","Text","setText","heading","value","placeholder","onChange","e","target","rows","disabled","length","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","innerHTML","setTimeout","newText","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c44e6ed6.chunk.js","sourcesContent":["export default function About(props) {\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark' ? 'white' : '#042743',\r\n        backgroundColor: props.mode === 'dark' ? 'rgb(36 74 104)' : 'white',\r\n    }\r\n    return (\r\n        <div className=\"container my-3\" style={myStyle}>\r\n            <h2 className=\"my-3\">About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong> Analyse your text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\nconst Navbar = (props) => {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/textutils\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/textutils\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <div className=\"form-check form-switch\">\r\n                                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                                <label className={`form-check-label  text-${props.mode===\"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const [Text, setText] = useState(\"\");\r\n    const handleUpClick = ()=>{\r\n        setText(Text.toUpperCase());\r\n        props.showAlert(\"Converted to Upper case!\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        setText(Text.toLowerCase());\r\n        props.showAlert(\"Converted to Lower case!\", \"success\");\r\n    }\r\n    const handleCopy = (e)=>{\r\n        navigator.clipboard.writeText(Text);\r\n        e.target.innerHTML = \"Copied\";\r\n        props.showAlert(\"Copied to clipboard!\", \"success\");\r\n        setTimeout(() => {\r\n            e.target.innerHTML = \"Copy text\"\r\n        }, 2000);\r\n    }\r\n    const handleExtraspaces = ()=>{\r\n        let newText = Text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed all extra spaces!\", \"success\");\r\n    }\r\n    const handleCleartext = ()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Cleared the text!\", \"success\");\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\">\r\n                <h2 className=\"mb-4\" style={{color: props.mode===\"light\" ? \"black\" : \"white\"}}>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea\r\n                     className=\"form-control\"\r\n                        style={{ backgroundColor: props.mode === \"light\" ? \"white\" : \"#13466e\", color: props.mode === \"light\" ? \"black\" : \"white\"}}\r\n                     id=\"exampleFormControlTextarea1\"\r\n                     value={Text}\r\n                     placeholder=\"Enter Your text here\"\r\n                     onChange={(e)=>{setText(e.target.value)}}\r\n                     rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled= {Text.length === 0} onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled= {Text.length === 0} onClick={handleLoClick}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled= {Text.length === 0} onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled= {Text.length === 0} onClick={handleExtraspaces}>Remove extra spaces</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled= {Text.length === 0} onClick={handleCleartext}>Clear Text</button>\r\n        </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}>\r\n            <h2>Your Text summary</h2>\r\n                <p>{Text.split(/\\s+/).filter((element)=>{ return element.length !== 0}).length} Words and {Text.length} characters </p>\r\n                <p>{0.08 * Text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{Text.length > 0 ? Text: \"Nothing to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired\r\n}\r\nTextForm.defaultProps = {\r\n    heading: \"Heading\"\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: \"50px\"}}>\r\n        {props.alert && <div>\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport { useState } from 'react';\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type)=>{\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    });\r\n    setTimeout(() => {\r\n     setAlert(null); \r\n    }, 1500);\r\n  }\r\n  const toggleMode = ()=>{\r\n    if(mode=== \"light\"){\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor =\"#042743\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\")\r\n    }else{\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\", \"success\")\r\n    }\r\n  }\r\n  return (\r\n    <>      \r\n    <Router>\r\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode = {toggleMode}/>\r\n      <Alert alert={alert}/>\r\n      <Switch>\r\n        <Route exact path=\"/about\">\r\n            <About mode={mode}/>\r\n        </Route>\r\n        <Route exact path=\"/textutils\">\r\n        <TextForm heading=\"Try TextUtils - Word Counter, character counter, remove extra spaces\" mode={mode} showAlert={showAlert} />\r\n        </Route>\r\n      </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}